'use strict';

var checkErrorResponse = function (err) {
    var error = err.responseJSON;
    var statusCode = parseInt(err.status);

    switch (statusCode) {
        case 400:
            notifyMessage('error', error.message);
            break;
        case 401:
            notifyMessage('error', 'Bạn chưa đăng nhập hoặc phiên đăng nhập hết hạn. Chúng tôi sẽ chuyển hướng trang sang trang đăng nhập trong vài giây tới.');
            localStorage.removeItem('token');
            deleteCookie();
            setTimeout(function () {
                window.location.href = '/sign-in#' + (location.pathname + location.search).substr(1);
            }, 3000);
            break;
        case 403:
            notifyMessage('error', 'Truy cập bị từ chối. Vui lòng liên hệ với đội ngũ Admin để biết thêm chi tiết.');
            break;
        case 404:
            notifyMessage('error', 'Không thể tìm thấy trang bạn đang tìm kiếm.');
            break;
        default:
            notifyMessage('error', 'Có lỗi xảy ra. Vui lòng thử lại sau');
            break;
    }
}

var coreReloadDatatable = function (tableId, newUrl) {
    console.log(newUrl)
    if (newUrl){
        $('#' + tableId).DataTable().ajax.url(newUrl).load();
    }else{
        $('#' + tableId).DataTable().ajax.reload();
    }
}

var coreDatatable = function (tableId, url, method, isServerSide, hasSearch, columns, dataSearch) {
    let table = $("#" + tableId).DataTable({
        paging: true,
        serverSide: isServerSide,
        processing: false,
        searching: hasSearch,
        scrollCollapse: true,
        autoWidth: false,
        responsive: true,
        pageLength: 25,
        lengthMenu: [25, 50, 100, 200],
        scrollY: "500px",
        aaSorting: [],
        columnDefs: [
            {
                width: "10px",
                targets: "datatable-nosort",
                orderable: false
            },
            {
                width: "75px",
                targets: "datatable-action",
                orderable: false,
            }
        ],
        language: {
            processing: function () {
                // _ShowLoading();
            },
            zeroRecords: "Không có dữ liệu.",
            searchPlaceholder: "Nhập từ khóa tìm kiếm",
            // paginate: {
            //     next: '<i class="ion-chevron-right"></i>',
            //     previous: '<i class="ion-chevron-left"></i>'
            // }
        },
        ajax: {
            headers: {
                'AuthorizationAPI': 'Bearer ' + localStorage.getItem('token')
            },
            cache: false,
            url: url,
            type: method,
            async: true,
            data: function () {
                if (isServerSide) {
                    let table = $("#" + tableId).DataTable();
                    let info = table.page.info();
                    let pageNumber = info.page + 1;
                    let rowsOfPage = info.length;

                    return {
                        "PageNumber": pageNumber,
                        "RowsOfPage": rowsOfPage,
                        "Filter": dataSearch
                    };
                } else
                    return {
                        "Filter": dataSearch
                    };
            },
            dataSrc: function (json) {
                return json.result.data;
            },
            error: function (err) {
                checkErrorResponse(err);
            }
        },
        columns: columns
    });

    initMomentDateTime();
}

var coreAjax = function (isValid, url, data, method, successCallBack, errorCallback) {
    if (isValid) {
        $.ajax({
            headers: {
                'AuthorizationAPI': 'Bearer ' + localStorage.getItem('token')
            },
            cache: false,
            url: url,
            type: method,
            data: data,
            contentType: 'application/json',
            success: function (res) {
                if (successCallBack) {
                    successCallBack(res);
                }
            },
            error: function (err) {
                checkErrorResponse(err);

                if (errorCallback) {
                    errorCallback();
                }
            }
        });
    }
}

var coreAjaxWithFormData = function (isValid, url, data, method, successCallBack, errorCallback) {
    if (isValid) {
        $.ajax({
            headers: {
                'AuthorizationAPI': 'Bearer ' + localStorage.getItem('token')
            },
            cache: false,
            url: url,
            type: method,
            data: data,
            contentType: false,
            processData: false,
            success: function (res) {
                if (successCallBack) {
                    successCallBack(res);
                }
            },
            error: function (err) {
                
                checkErrorResponse(err);

                if (errorCallback) {
                    errorCallback();
                }
            }
        });
    }
}

var coreAjaxGetPartialView = function (isValid, url, data, successCallBack, errorCallback) {
    if (isValid) {
        $.ajax({
            headers: {
                'AuthorizationAPI': 'Bearer ' + localStorage.getItem('token')
            },
            cache: false,
            url: url,
            type: 'GET',
            data: data,
            success: function (res) {
                if (successCallBack) {
                    successCallBack(res);
                }
            },
            error: function (err) {
                
                checkErrorResponse(err);

                if (errorCallback) {
                    errorCallback();
                }
            }
        });
    }
}

var coreAjaxWeb = function (isValid, url, data, method, successCallBack, errorCallback) {
    if (isValid) {
        $.ajax({
            headers: {
                'AuthorizationAPI': 'Bearer ' + localStorage.getItem('token')
            },
            cache: false,
            url: $("#WebBaseUrl").val() + url,
            type: method,
            data: data,
            contentType: 'application/json',
            success: function (res) {
                if (successCallBack) {
                    successCallBack(res);
                }
            },
            error: function (err) {
                
                checkErrorResponse(err);

                if (errorCallback) {
                    errorCallback();
                }
            }
        });
    }
}

var coreAjaxPostPartialView = function (isValid, url, data, successCallBack, errorCallback) {
    if (isValid) {
        $.ajax({
            headers: {
                'AuthorizationAPI': 'Bearer ' + localStorage.getItem('token')
            },
            cache: false,
            url: url,
            type: 'POST',
            data: data,
            contentType: 'application/json',
            success: function (res) {
                if (successCallBack) {
                    successCallBack(res);
                }
            },
            error: function (err) {

                checkErrorResponse(err);

                if (errorCallback) {
                    errorCallback();
                }
            }
        });
    }
}